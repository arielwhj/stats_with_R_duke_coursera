a = 1
b = 2
install.packages("devtools")
library(devtools)
install.packages("dplyr")
install.packages("ggplot2")
install.packages()
install.packages(shiny)
install.packages("shiny")
install.packages("StatsWithR/statsr")
install_github("StatsWithR/statsr")
install.packages("knit")
install.packages("Knit")
# Chunk 1: load-packages
library(statsr)
library(dplyr)
library(ggplot2)
# Chunk 2: load-data
data(nycflights)
# Chunk 3: names
names(nycflights)
# Chunk 4: str
str(nycflights)
# Chunk 5: hist-dep-delay
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram()
# Chunk 6: hist-dep-delay-bins
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram(binwidth = 15)
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram(binwidth = 150)
# Chunk 7: rdu-flights-hist
rdu_flights <- nycflights %>%
filter(dest == "RDU")
ggplot(data = rdu_flights, aes(x = dep_delay)) +
geom_histogram()
# Chunk 8: rdu-flights-summ
rdu_flights %>%
summarise(mean_dd = mean(dep_delay), sd_dd = sd(dep_delay), n = n())
# Chunk 9
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)
# Chunk 10: sfo-feb-flights
# type your code for Question 1 here, and Knit
# Chunk 11: sfo-feb-flights-arrival-delays
# type your code for Question 2 here, and Knit
# Chunk 12: summary-custom-list-origin
rdu_flights %>%
group_by(origin) %>%
summarise(mean_dd = mean(dep_delay), sd_dd = sd(dep_delay), n = n())
# Chunk 13: sfo-feb-flights-arrival-delays-carrier
# type your code for Question 3 here, and Knit
# Chunk 14: mean-dep-delay-months
nycflights %>%
group_by(month) %>%
summarise(mean_dd = mean(dep_delay)) %>%
arrange(desc(mean_dd))
# Chunk 15: highest-avg-dep-delay-month
# type your code for Question 4 here, and Knit
# Chunk 16: highest-median-dep-delay-month
# type your code for Question 5 here, and Knit
# Chunk 17: delay-month-box
ggplot(nycflights, aes(x = factor(month), y = dep_delay)) +
geom_boxplot()
# Chunk 18: dep-type
nycflights <- nycflights %>%
mutate(dep_type = ifelse(dep_delay < 5, "on time", "delayed"))
# Chunk 19
nycflights %>%
group_by(origin) %>%
summarise(ot_dep_rate = sum(dep_type == "on time") / n()) %>%
arrange(desc(ot_dep_rate))
# Chunk 20: on-time-dep-perc-airport
# type your code for Question 7 here, and Knit
# Chunk 21
ggplot(data = nycflights, aes(x = origin, fill = dep_type)) +
geom_bar()
# Chunk 22: fastest-avg-speed-tailnum
# type your code for Question 8 here, and Knit
# Chunk 23: avg-speed-dist-scatter
# type your code for Question 9 here, and Knit
# Chunk 24: on-time-arr-perc
# type your code for Question 9 here, and Knit
data(nycflights)
head(nycflights)
names(nycflights)
str(nycflights)
rdu_f <- nyflights %>%
filter(dest == 'RDU')
rdu_f <- nycflights %>% filter(dest=='RDU')
rdu_f
rdu_flights %>%
summarise(mean_dd = mean(dep_delay), sd_dd = sd(dep_delay), n = n())
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)
sfo_feb_flights
sfo_feb_flights %>%
summarise(n = n())
sfo_feb_flights %>%
summarise(mean=mean(arr_delay), median=median(arr_delay), IQR=IQR(arr_delay),)
sfo_feb_flights %>%
summarise(mean=mean(arr_delay), median=median(arr_delay), IQR=IQR(arr_delay), Max = max(arr_delay)
)
sfo_feb_flights %>%
summarise(mean=mean(arr_delay), median=median(arr_delay),SD=SD(arr_delay), IQR=IQR(arr_delay), Max = max(arr_delay), Min=min(arr_delay))
sfo_feb_flights %>%
summarise(mean=mean(arr_delay), median=median(arr_delay),SD=sd(arr_delay), IQR=IQR(arr_delay), Max = max(arr_delay), Min=min(arr_delay))
ggplot(data=sfo_feb_flights, aes(x=arr_delay)) + geom_histogram()
ggplot(data=sfo_feb_flights, aes(x=arr_delay)) + geom_histogram(binwidth=10)
ggplot(data=sfo_feb_flights, aes(x=arr_delay)) + geom_histogram(binwidth=5)
ggplot(data=sfo_feb_flights, aes(x=arr_delay)) + geom_histogram(binwidth=1)
ggplot(data=sfo_feb_flights, aes(x=arr_delay)) + geom_histogram(binwidth=2)
ggplot(data=sfo_feb_flights, aes(x=arr_delay)) + geom_histogram(binwidth=5)
help(filter)
data("nycflights")
str(nycflights)
subset
allflight
str(nycflights)
nycflights <- nycflights %>%
mutate(dep_type = ifelse(dep_delay<=0, "on time", "delayed"))
str(nycflights)
nycflights <- nycflights %>%
mutate(arr_type = ifelse(arr_delay<=0, "on time", "delayed"))
df = nycflights
df.head()
head(df)
df[df$dep_type=="delayed" & df$arr_type=="on time"]
df[df$dep_type=="delayed"]
df
df$dep_type=="delayed"
sum(df$dep_type=="delayed")
str(df)
a = sum(df$dep_delay=="delayed" & df$dep_delay=="on time")
a
a = sum(df$dep_delay=="delayed" & df$arr_delay=="on time")
a
a = sum(df$dep_type=="delayed" & df$arr_type=="on time")
a
shape(df)
dim(df)
3508/32735
str(nycflights)
8/28
38/52
51/55
28/36
library(statsr)
library(dplyr)
library(ggplot2)
data(kobe_basket)
head(kobe_baset)
head(kobe_basket)
names(kobe_basket)
describe(kobe_basket)
calc_streak()
help("calc_element")
pnorm(5, 5, 1)
pnorm(5:10, 5, 1)
0.93**19
0.93**10
0.93^10
sample_mean
sample_means50
help(rep_sample_n)
pnorm(30.69, 32, 0.7266)
help(pnorm)
pnorm(30.69, 32, 0.7266, lower.tail = FALSE)
qnorm(0.98)
qnorm(0.99)
help("hist")
head(atheism)
help(inference)
load("gss.Rdata")
pwd
getcwd()
cwd()
setwd("S:/DataScience/Classes/Stats_with_R_Coursera/Inferential_statistics/course_project")
load("gss.Rdata")
data <- gss.Rdata
gss
head(gss)
str(gss)
clear
clear()
cls
clc
cl
c
clear
head(gss)
str(gss$homosex)
levels(gss$homosex)
help(inference)
